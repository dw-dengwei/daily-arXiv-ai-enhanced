name: arXiv-daily-ai-enhanced

on:
  schedule:
    # 每天定时运行 (UTC时间 16:30)
    - cron: "30 16 * * *"
  workflow_dispatch: # 允许手动触发

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        # source /root/.cargo/env
        uv sync

    - name: Run workflow steps
      id: run_scripts 
      env:
        GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        OPENAI_BASE_URL: ${{ secrets.OPENAI_BASE_URL }}
        LANGUAGE: ${{ vars.LANGUAGE }}
        CATEGORIES: ${{ vars.CATEGORIES }}
        MODEL_NAME: ${{ vars.MODEL_NAME }}
      run: |
        source .venv/bin/activate
        
        TODAY=$(date +"%Y-%m-%d")
        RAW_JSONL_FILE="data/$TODAY.jsonl"
        ENHANCED_JSONL_FILE="data/${TODAY}_AI_enhanced_${LANGUAGE:-Chinese}.jsonl"
        OUTPUT_MD_FILE="data/$TODAY.md"
        PAPER_TEMPLATE_FILE="to_md/paper_template.md"

        echo "步骤 1: 正在抓取 arXiv 论文..."
        (cd daily_arxiv && scrapy crawl arxiv -o "../$RAW_JSONL_FILE")
        echo "步骤 2: 正在使用 AI 增强数据..."
        python ai/enhance.py --data "$RAW_JSONL_FILE"
        echo "步骤 3: 正在生成 Markdown 报告..."
        python to_md/convert.py --input "$ENHANCED_JSONL_FILE" --template "$PAPER_TEMPLATE_FILE" --output "$OUTPUT_MD_FILE"
        echo "步骤 4: 正在更新主 README.md..."
        python update_readme.py

        echo "report_path=$OUTPUT_MD_FILE" >> $GITHUB_OUTPUT

        echo "工作流成功完成！"

    - name: Set Current Date
      id: date
      run: echo "TODAY_DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

    - name: Create or Update Daily Digest Issue
      uses: peter-evans/create-issue-from-file@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        # **修正**: 从上一步的环境变量中获取日期
        title: "每日速报 (Daily Digest): ${{ env.TODAY_DATE }}"
        content-filepath: "${{ steps.run_scripts.outputs.report_path }}"
        labels: daily-digest, automated

    - name: Commit and push changes
      run: |
        git config --global user.email "${{ vars.EMAIL }}"
        git config --global user.name "${{ vars.NAME }}"
        git add .
        if ! git diff --staged --quiet; then
          git commit -m "update"
        else
          echo "No changes to commit."
        fi

    - name: Pull latest changes
      run: git pull origin main --rebase

    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
