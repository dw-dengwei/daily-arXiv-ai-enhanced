# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: arXiv-daily-ai-enhanced

on:
  schedule:
    - cron: "30 16 * * *"
  workflow_dispatch:


jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Install dependencies
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        uv sync
    - name: Run script
      id: run_script
      run: |
        source .venv/bin/activate
        export OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
        export OPENAI_BASE_URL=${{ secrets.OPENAI_BASE_URL }}
        export LANGUAGE="${{ vars.LANGUAGE }}"
        export CATEGORIES="${{ vars.CATEGORIES }}"
        export MODEL_NAME="${{ vars.MODEL_NAME }}"
        bash run.sh
        echo "script_exit_code=$?" >> $GITHUB_OUTPUT
        
    - name: Check if content was processed
      run: |
        # Scrapy集成方案的退出码含义 / Exit code meanings for Scrapy integrated solution:
        # 0: 发现新内容并成功处理 / New content found and processed successfully
        # 2: 今日无新论文 / No new papers today  
        # 3: 内容重复 / Content duplicated
        # 1: 处理失败 / Processing failed
        if [ "${{ steps.run_script.outputs.script_exit_code }}" = "0" ]; then
          echo "发现新内容并成功处理，继续提交 / New content processed successfully, proceeding with commit"
        else
          echo "无新内容、重复内容或处理失败，跳过提交 / No new content, duplicate content, or processing failed - skipping commit"
          echo "退出码 / Exit code: ${{ steps.run_script.outputs.script_exit_code }}"
          exit 0
        fi
        
    - name: commit
      run: |
        git config --global user.email "${{ vars.EMAIL }}"
        git config --global user.name "${{ vars.NAME }}"
        git add .
        # 检查是否有变更需要提交
        if git diff --staged --quiet; then
          echo "No changes to commit"
          exit 0
        fi
        git commit -m "update: $(date -u '+%Y-%m-%d') arXiv papers"
    - name: Pull latest changes and push
      run: |
        # 设置Git配置以处理自动合并
        git config pull.rebase true
        git config rebase.autoStash true
        
        # 尝试推送，如果失败则拉取并重试
        for i in {1..3}; do
          echo "Push attempt $i"
          if git push origin main; then
            echo "Push successful"
            break
          else
            echo "Push failed, pulling latest changes..."
            git pull origin main --no-edit || true
            if [ $i -eq 3 ]; then
              echo "Failed to push after 3 attempts"
              exit 1
            fi
          fi
        done