# 工作流名称
name: run-auto-commit-Daily Arxiv Digest & Deploy Website

on:
  schedule:
    # 每天在UTC时间16:30运行
    - cron: "30 16 * * *"
  workflow_dispatch: # 允许手动触发
  push:
    branches:
      - main # 当推送到主分支时也触发，方便测试

jobs:
  # --- 任务1: 构建数据和网站文件 ---
  build:
    runs-on: ubuntu-latest
    # --- 关键: 为 build 任务授予写入仓库的权限 ---
    permissions:
      contents: write # 允许工作流修改仓库内容
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          uv sync

      - name: Run Data Processing Pipeline
        id: run_scripts
        env:
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
          LANGUAGE: ${{ vars.LANGUAGE }}
          CATEGORIES: ${{ vars.CATEGORIES }}
          MODEL_NAME: ${{ vars.MODEL_NAME }}
          FALLBACK_MODELS: ${{ vars.FALLBACK_MODELS }}
        run: |
          source .venv/bin/activate
          
          TODAY=$(date +"%Y-%m-%d")
          RAW_JSONL_FILE="data/$TODAY.jsonl"
          ENHANCED_JSONL_FILE="data/${TODAY}_AI_enhanced_${LANGUAGE:-Chinese}.jsonl"
          OUTPUT_MD_FILE="data/$TODAY.md"
          PAPER_TEMPLATE_FILE="to_md/paper_template.md"
          
          echo "Step 1: Fetching new papers from arXiv..."
          (cd daily_arxiv && scrapy crawl arxiv -o "../$RAW_JSONL_FILE")
          
          # 检查爬虫是否生成了有效文件
          if [ ! -s "$RAW_JSONL_FILE" ]; then
            echo "No new papers found. Workflow will finish without commit."
            # 通过设置一个输出来通知后续步骤
            echo "no_changes=true" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          echo "Step 2: Enhancing paper data with AI..."
          python ai/enhance.py --data "$RAW_JSONL_FILE"
          
          echo "Step 3: Building the JSON database for the website..."
          python build_database.py

          echo "Step 4: Generating Markdown report..."
          python to_md/convert.py --input "$ENHANCED_JSONL_FILE" --template "$PAPER_TEMPLATE_FILE" --output "$OUTPUT_MD_FILE"
          
          echo "Step 5: Updating main README.md..."
          python update_readme.py
          
          echo "工作流数据处理成功完成！"
      
      # --- 关键修正: 使用专业的 Action 来提交和推送代码 ---
      - name: Commit and push changes
        # 仅当上一步没有报告“无变更”时运行
        if: steps.run_scripts.outputs.no_changes != 'true'
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          # 提交信息
          commit_message: "update: Daily digest for $(date +'%Y-%m-%d')"
          # 使用通用的机器人身份，绕过对仓库变量的依赖
          commit_user_name: github-actions[bot]
          commit_user_email: 41898282+github-actions[bot]@users.noreply.github.com
          # 要添加的文件，'.' 表示所有文件
          file_pattern: .
          # 推送的目标分支
          branch: main

      # --- 网站部署步骤 (保持不变) ---
      - name: Setup GitHub Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./docs

  deploy:
    needs: build
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
