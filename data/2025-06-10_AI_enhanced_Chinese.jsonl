{"id": "2506.06333", "title": "Extending AALpy with Passive Learning: A Generalized State-Merging Approach", "authors": ["Benjamin von Berg", "Bernhard K. Aichernig"], "summary": "AALpy is a well-established open-source automata learning library written in\nPython with a focus on active learning of systems with IO behavior. It provides\na wide range of state-of-the-art algorithms for different automaton types\nranging from fully deterministic to probabilistic automata. In this work, we\npresent the recent addition of a generalized implementation of an important\nmethod from the domain of passive automata learning: state-merging in the\nred-blue framework. Using a common internal representation for different\nautomaton types allows for a general and highly configurable implementation of\nthe red-blue framework. We describe how to define and execute state-merging\nalgorithms using AALpy, which reduces the implementation effort for\nstate-merging algorithms mainly to the definition of compatibility criteria and\nscoring. This aids the implementation of both existing and novel algorithms. In\nparticular, defining some existing state-merging algorithms from the literature\nwith AALpy only takes a few lines of code.", "comment": "Accepted for publication at CAV 2025, the 37th International\n  Conference on Computer Aided Verification", "cate": "cs.LG", "url": "http://arxiv.org/pdf/2506.06333v1", "AI": {"title_translation": "使用被动学习扩展AALpy：一种广义状态合并方法", "tldr": "AALpy库通过广义状态合并方法扩展了被动学习功能，简化了状态合并算法的实现。", "motivation": "为了扩展AALpy库的功能，使其支持被动自动机学习领域中的状态合并方法。", "method": "在red-blue框架下，使用通用的内部表示来实现不同自动机类型的状态合并算法。", "result": "通过AALpy实现现有的状态合并算法只需几行代码。", "conclusion": "AALpy通过引入广义状态合并方法，降低了状态合并算法的实现难度，促进了现有和新型算法的实现。", "translation": "AALpy是一个完善的开源自动机学习库，用Python编写，专注于具有IO行为的系统的主动学习。它为不同的自动机类型提供了各种最先进的算法，范围从完全确定性自动机到概率自动机。在这项工作中，我们介绍了最近添加的来自被动自动机学习领域的重要方法的广义实现：red-blue框架中的状态合并。对不同自动机类型使用通用的内部表示，可以实现red-blue框架的通用且高度可配置的实现。我们描述了如何使用AALpy定义和执行状态合并算法，这主要将状态合并算法的实现工作量减少到兼容性标准和评分的定义。这有助于实现现有和新型算法。特别是，使用AALpy定义文献中的一些现有状态合并算法只需要几行代码。", "summary": "本文介绍了AALpy库中新增的基于red-blue框架的广义状态合并方法，用于被动自动机学习。该方法通过通用内部表示简化了不同自动机类型的状态合并算法的实现，并降低了实现现有和新型算法的难度。", "keywords": "AALpy, 自动机学习, 状态合并, 被动学习, red-blue框架", "comments": "该论文介绍了一种实用的工具扩展，着重于简化现有算法的实现，具有一定的工程价值。"}}
{"id": "2506.06551", "title": "Elementary Cellular Automata as Non-Cryptographic Hash Functions", "authors": ["Daniel McKinley"], "summary": "A subset of 10 of the 256 elementary cellular automata (ECA) are implemented\nas a hash function using an error minimization lossy compression algorithm\noperating on wrapped 4x4 neighborhood cells. All 256 rules are processed and 10\nrules in two subsets of 8 are found to have properties that include both error\nminimization and maximization, unique solutions, a lossy inverse, efficient\nretroactive hashing, and an application to edge detection. The algorithm\nparallels the nested powers-of-two structure of the Fast Fourier Transform and\nFast Walsh-Hadamard Transform, is implemented in Java, and is built to hash any\n2 byte RGB code bitmap.", "comment": null, "cate": "nlin.CG", "url": "http://arxiv.org/pdf/2506.06551v1", "AI": {"title_translation": "作为非密码散列函数的初级元胞自动机", "tldr": "使用初级元胞自动机作为散列函数，实现了错误最小化有损压缩算法，适用于2字节RGB代码位图。", "motivation": "探索初级元胞自动机在非密码散列函数中的应用。", "method": "实现了基于4x4邻域单元的错误最小化有损压缩算法，并应用于256个初级元胞自动机规则的子集。", "result": "找到了8个规则的两个子集，这些规则具有错误最小化和最大化、唯一解、有损逆、高效追溯散列以及边缘检测应用等特性。", "conclusion": "Not mentioned in abstract", "translation": "实现了256个基本元胞自动机（ECA）中的一个子集（10个），作为哈希函数，使用了一种基于包裹的4x4邻域单元的误差最小化有损压缩算法。处理了所有256条规则，发现8条规则的两个子集具有包括误差最小化和最大化、唯一解、有损逆、高效追溯哈希以及边缘检测应用等特性。该算法与快速傅里叶变换和快速沃尔什-哈达玛变换的嵌套二次幂结构类似，用Java实现，旨在哈希任何2字节RGB代码位图。", "summary": "本文提出了一种使用初级元胞自动机作为散列函数的方法。通过在4x4邻域单元上应用错误最小化有损压缩算法，实现了256个ECA规则中的一个子集。实验结果表明，该方法具有错误最小化、唯一解、有损逆等特性，并可应用于边缘检测。该算法用Java实现，适用于散列2字节RGB代码位图。", "keywords": "元胞自动机, 散列函数, 错误最小化, 有损压缩, 边缘检测", "comments": "该论文提出了一种新颖的散列函数实现方法，利用了初级元胞自动机的特性。该方法具有一定的创新性，但其安全性和性能还需要进一步评估。"}}
{"id": "2506.07956", "title": "Language Models over Canonical Byte-Pair Encodings", "authors": ["Tim Vieira", "Tianyu Liu", "Clemente Pasti", "Yahya Emara", "Brian DuSell", "Benjamin LeBrun", "Mario Giulianelli", "Juan Luis Gastaldi", "Timothy J. O'Donnell", "Ryan Cotterell"], "summary": "Modern language models represent probability distributions over character\nstrings as distributions over (shorter) token strings derived via a\ndeterministic tokenizer, such as byte-pair encoding. While this approach is\nhighly effective at scaling up language models to large corpora, its current\nincarnations have a concerning property: the model assigns nonzero probability\nmass to an exponential number of $\\it{noncanonical}$ token encodings of each\ncharacter string -- these are token strings that decode to valid character\nstrings but are impossible under the deterministic tokenizer (i.e., they will\nnever be seen in any training corpus, no matter how large). This misallocation\nis both erroneous, as noncanonical strings never appear in training data, and\nwasteful, diverting probability mass away from plausible outputs. These are\navoidable mistakes! In this work, we propose methods to enforce canonicality in\ntoken-level language models, ensuring that only canonical token strings are\nassigned positive probability. We present two approaches: (1) canonicality by\nconditioning, leveraging test-time inference strategies without additional\ntraining, and (2) canonicality by construction, a model parameterization that\nguarantees canonical outputs but requires training. We demonstrate that fixing\ncanonicality mistakes improves the likelihood of held-out data for several\nmodels and corpora.", "comment": "ICML 2025", "cate": "cs.CL", "url": "http://arxiv.org/pdf/2506.07956v1", "AI": {"title_translation": "规范字节对编码上的语言模型", "tldr": "语言模型会给不应该存在的token序列赋予概率，本文提出了两种方法来避免这个问题，实验表明可以提高模型在 held-out 数据上的表现。", "motivation": "当前语言模型会给每个字符序列的指数数量的非规范 token 编码赋予非零概率，这是一种错误且浪费的行为，因为非规范字符串永远不会出现在训练数据中。", "method": "提出了两种方法来强制执行 token 级别语言模型中的规范性：(1) 通过条件反射实现规范性，利用测试时推理策略，无需额外训练；(2) 通过构建实现规范性，这是一种保证规范输出但需要训练的模型参数化。", "result": "实验表明，修复规范性错误可以提高几个模型和语料库的 held-out 数据的可能性。", "conclusion": "本文提出了两种方法来强制执行 token 级别语言模型中的规范性，实验表明可以提高模型在 held-out 数据上的表现。", "translation": "现代语言模型将字符字符串上的概率分布表示为通过确定性分词器（如字节对编码）导出的（较短）token字符串上的分布。虽然这种方法在将语言模型扩展到大型语料库方面非常有效，但其目前的实现方式存在一个令人担忧的属性：该模型为每个字符字符串的指数数量的非规范token编码分配非零概率——这些token字符串解码为有效的字符字符串，但在确定性分词器下是不可能的（即，无论训练语料库有多大，它们都不会出现在任何训练语料库中）。这种错误分配既是错误的，因为非规范字符串永远不会出现在训练数据中，也是浪费的，将概率质量从合理的输出中转移出去。这些都是可以避免的错误！在这项工作中，我们提出了在token级别语言模型中强制执行规范性的方法，确保只有规范token字符串被分配正概率。我们提出了两种方法：（1）通过条件反射实现规范性，利用测试时推理策略，无需额外训练；（2）通过构建实现规范性，这是一种保证规范输出但需要训练的模型参数化。我们证明了修复规范性错误可以提高几个模型和语料库的 held-out 数据的可能性。", "summary": "本文提出了两种方法来解决语言模型中非规范 token 编码问题，这些方法旨在强制执行 token 级别语言模型中的规范性，确保只有规范 token 字符串被分配正概率。实验结果表明，这些方法可以提高模型在 held-out 数据上的表现。", "keywords": "语言模型, 字节对编码, 规范性", "comments": "本文创新性地提出了两种方法来解决语言模型中非规范 token 编码问题，这对于提高语言模型的效率和准确性具有重要意义。该研究的局限性在于实验只在几个模型和语料库上进行，未来需要在更多的数据集上进行验证。"}}
