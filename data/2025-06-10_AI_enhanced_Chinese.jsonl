{"id": "2506.06333", "title": "Extending AALpy with Passive Learning: A Generalized State-Merging Approach", "authors": ["Benjamin von Berg", "Bernhard K. Aichernig"], "summary": "AALpy is a well-established open-source automata learning library written in\nPython with a focus on active learning of systems with IO behavior. It provides\na wide range of state-of-the-art algorithms for different automaton types\nranging from fully deterministic to probabilistic automata. In this work, we\npresent the recent addition of a generalized implementation of an important\nmethod from the domain of passive automata learning: state-merging in the\nred-blue framework. Using a common internal representation for different\nautomaton types allows for a general and highly configurable implementation of\nthe red-blue framework. We describe how to define and execute state-merging\nalgorithms using AALpy, which reduces the implementation effort for\nstate-merging algorithms mainly to the definition of compatibility criteria and\nscoring. This aids the implementation of both existing and novel algorithms. In\nparticular, defining some existing state-merging algorithms from the literature\nwith AALpy only takes a few lines of code.", "comment": "Accepted for publication at CAV 2025, the 37th International\n  Conference on Computer Aided Verification", "cate": "cs.LG", "url": "http://arxiv.org/pdf/2506.06333v1", "AI": {"title_translation": "使用被动学习扩展 AALpy：一种广义状态合并方法", "tldr": "AALpy 库通过广义状态合并方法扩展了被动学习功能，简化了状态合并算法的实现。", "motivation": "为了扩展 AALpy 库的功能，使其支持被动自动机学习中的状态合并方法。", "method": "在 AALpy 库中，通过使用通用的内部表示来实现 red-blue 框架下的广义状态合并算法。算法的定义和执行主要依赖于兼容性标准和评分的定义。", "result": "通过 AALpy 实现了 red-blue 框架下的广义状态合并算法，并展示了使用 AALpy 实现现有状态合并算法所需的代码量大大减少。", "conclusion": "AALpy 库现在支持使用广义状态合并方法的被动学习，极大地简化了状态合并算法的实现过程。", "translation": "AALpy 是一个成熟的开源自动机学习库，用 Python 编写，专注于具有 IO 行为的系统的主动学习。它为不同的自动机类型提供了广泛的最新算法，范围从完全确定性到概率自动机。在这项工作中，我们介绍了最近添加的来自被动自动机学习领域的重要方法的广义实现：red-blue 框架中的状态合并。对不同自动机类型使用通用的内部表示允许 red-blue 框架的通用和高度可配置的实现。我们描述了如何使用 AALpy 定义和执行状态合并算法，这主要将状态合并算法的实现工作减少到兼容性标准和评分的定义。这有助于实现现有算法和新算法。特别是，使用 AALpy 定义文献中的一些现有状态合并算法只需要几行代码。", "summary": "本文介绍了 AALpy 库中新增的基于 red-blue 框架的广义状态合并算法的实现。该实现利用通用内部表示，简化了状态合并算法的定义和执行，并通过实例验证了其有效性。", "keywords": "自动机学习, 被动学习, 状态合并, AALpy, red-blue 框架", "comments": "该论文介绍了一种实用的自动机学习库的扩展，着重于简化状态合并算法的实现，具有一定的工程价值。通过提供通用的框架和减少代码量，降低了算法实现的门槛。"}}
{"id": "2506.06551", "title": "Elementary Cellular Automata as Non-Cryptographic Hash Functions", "authors": ["Daniel McKinley"], "summary": "A subset of 10 of the 256 elementary cellular automata (ECA) are implemented\nas a hash function using an error minimization lossy compression algorithm\noperating on wrapped 4x4 neighborhood cells. All 256 rules are processed and 10\nrules in two subsets of 8 are found to have properties that include both error\nminimization and maximization, unique solutions, a lossy inverse, efficient\nretroactive hashing, and an application to edge detection. The algorithm\nparallels the nested powers-of-two structure of the Fast Fourier Transform and\nFast Walsh-Hadamard Transform, is implemented in Java, and is built to hash any\n2 byte RGB code bitmap.", "comment": null, "cate": "nlin.CG", "url": "http://arxiv.org/pdf/2506.06551v1", "AI": {"title_translation": "初等细胞自动机作为非密码散列函数", "tldr": "使用初等细胞自动机实现了一种非密码散列函数，该函数具有误差最小化、最大化、独特的解决方案和高效的追溯散列等特性。", "motivation": "探索初等细胞自动机在非密码散列函数中的应用。", "method": "使用误差最小化有损压缩算法在包裹的4x4邻域单元上实现10个256个初等细胞自动机（ECA）的子集作为散列函数。", "result": "发现8个规则的两个子集中的10个规则具有误差最小化和最大化、独特的解决方案、有损逆、高效的追溯散列以及边缘检测的应用等特性。", "conclusion": "所实现的基于初等细胞自动机的散列函数具有多种有用的特性，例如误差最小化、最大化和高效的追溯散列。", "translation": "摘要：实现了256个基本细胞自动机（ECA）中的10个子集，作为一种散列函数，它使用一种误差最小化有损压缩算法，该算法作用于包裹的4x4邻域单元。处理所有256条规则，发现8个规则的两个子集中的10条规则具有误差最小化和最大化、独特的解决方案、有损逆、高效的追溯散列以及边缘检测的应用等特性。该算法与快速傅里叶变换和快速沃尔什-哈达玛变换的嵌套二次幂结构相似，用Java实现，旨在散列任何2字节RGB代码位图。", "summary": "本文提出了一种基于初等细胞自动机的非密码散列函数。该函数通过误差最小化有损压缩算法处理4x4邻域单元，并实现了256个ECA规则中的10个子集。实验结果表明，该函数具有误差最小化、最大化、独特的解决方案和高效的追溯散列等特性，并可应用于边缘检测。该算法用Java实现，适用于散列任何2字节RGB代码位图。", "keywords": "细胞自动机, 散列函数, 误差最小化", "comments": "该论文提出了一种新颖的基于初等细胞自动机的散列函数，并探讨了其在误差最小化、最大化和追溯散列等方面的应用。该方法具有一定的创新性，但其实际应用价值和安全性还需要进一步研究。"}}
{"id": "2506.07956", "title": "Language Models over Canonical Byte-Pair Encodings", "authors": ["Tim Vieira", "Tianyu Liu", "Clemente Pasti", "Yahya Emara", "Brian DuSell", "Benjamin LeBrun", "Mario Giulianelli", "Juan Luis Gastaldi", "Timothy J. O'Donnell", "Ryan Cotterell"], "summary": "Modern language models represent probability distributions over character\nstrings as distributions over (shorter) token strings derived via a\ndeterministic tokenizer, such as byte-pair encoding. While this approach is\nhighly effective at scaling up language models to large corpora, its current\nincarnations have a concerning property: the model assigns nonzero probability\nmass to an exponential number of $\\it{noncanonical}$ token encodings of each\ncharacter string -- these are token strings that decode to valid character\nstrings but are impossible under the deterministic tokenizer (i.e., they will\nnever be seen in any training corpus, no matter how large). This misallocation\nis both erroneous, as noncanonical strings never appear in training data, and\nwasteful, diverting probability mass away from plausible outputs. These are\navoidable mistakes! In this work, we propose methods to enforce canonicality in\ntoken-level language models, ensuring that only canonical token strings are\nassigned positive probability. We present two approaches: (1) canonicality by\nconditioning, leveraging test-time inference strategies without additional\ntraining, and (2) canonicality by construction, a model parameterization that\nguarantees canonical outputs but requires training. We demonstrate that fixing\ncanonicality mistakes improves the likelihood of held-out data for several\nmodels and corpora.", "comment": "ICML 2025", "cate": "cs.CL", "url": "http://arxiv.org/pdf/2506.07956v1", "AI": {"title_translation": "基于规范字节对编码的语言模型", "tldr": "语言模型会给不可能出现的token序列赋予非零概率，这浪费了概率质量。本文提出了两种方法来强制执行规范性，从而提高模型在保留数据上的似然性。", "motivation": "现有的语言模型会给每个字符序列的指数数量的非规范token编码赋予非零概率，这既是错误的，也是浪费的，因为非规范字符串永远不会出现在训练数据中。", "method": "提出了两种强制token级别语言模型规范性的方法：(1) 通过条件作用实现规范性，利用测试时推理策略，无需额外训练；(2) 通过构造实现规范性，这是一种保证规范输出的模型参数化，但需要训练。", "result": "证明了纠正规范性错误提高了几个模型和语料库的保留数据的可能性。", "conclusion": "本文提出了两种方法来强制执行token级别语言模型的规范性，确保只有规范的token字符串被分配正概率，并且证明了纠正规范性错误提高了保留数据的可能性。", "translation": "现代语言模型将字符字符串上的概率分布表示为通过确定性分词器（如字节对编码）导出的（较短）token字符串上的分布。虽然这种方法在将语言模型扩展到大型语料库方面非常有效，但它目前的实现方式存在一个令人担忧的属性：该模型为每个字符字符串的指数数量的非规范token编码分配非零概率——这些token字符串解码为有效的字符字符串，但在确定性分词器下是不可能的（即，无论训练语料库有多大，它们都不会出现在任何训练语料库中）。这种错误分配既是错误的，因为非规范字符串永远不会出现在训练数据中，也是浪费的，将概率质量从合理的输出中转移出去。这些都是可以避免的错误！在这项工作中，我们提出了在token级别语言模型中强制执行规范性的方法，确保只有规范的token字符串被分配正概率。我们提出了两种方法：（1）通过条件作用实现规范性，利用测试时推理策略，无需额外训练；（2）通过构造实现规范性，这是一种保证规范输出的模型参数化，但需要训练。我们证明了纠正规范性错误提高了几个模型和语料库的保留数据的可能性。", "summary": "本文提出了一种解决语言模型中非规范token编码问题的方法。通过条件作用和构造两种方法，强制执行token级别语言模型的规范性，确保只有规范的token字符串被分配正概率。实验证明，该方法提高了模型在保留数据上的似然性。", "keywords": "语言模型, 字节对编码, 规范性", "comments": "该论文创新性地提出了两种方法来解决语言模型中非规范token编码的问题，具有一定的理论意义和实用价值。实验结果也证明了该方法的有效性。"}}
