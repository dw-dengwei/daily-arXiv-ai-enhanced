{"id": "2506.05566", "pdf": "https://arxiv.org/pdf/2506.05566", "abs": "https://arxiv.org/abs/2506.05566", "authors": ["Chenhui Deng", "Yun-Da Tsai", "Guan-Ting Liu", "Zhongzhi Yu", "Haoxing Ren"], "title": "ScaleRTL: Scaling LLMs with Reasoning Data and Test-Time Compute for Accurate RTL Code Generation", "categories": ["cs.AR", "cs.AI"], "comment": null, "summary": "Recent advances in large language models (LLMs) have enabled near-human\nperformance on software coding benchmarks, but their effectiveness in RTL code\ngeneration remains limited due to the scarcity of high-quality training data.\nWhile prior efforts have fine-tuned LLMs for RTL tasks, they do not\nfundamentally overcome the data bottleneck and lack support for test-time\nscaling due to their non-reasoning nature. In this work, we introduce ScaleRTL,\nthe first reasoning LLM for RTL coding that scales up both high-quality\nreasoning data and test-time compute. Specifically, we curate a diverse set of\nlong chain-of-thought reasoning traces averaging 56K tokens each, resulting in\na dataset of 3.5B tokens that captures rich RTL knowledge. Fine-tuning a\ngeneral-purpose reasoning model on this corpus yields ScaleRTL that is capable\nof deep RTL reasoning. Subsequently, we further enhance the performance of\nScaleRTL through a novel test-time scaling strategy that extends the reasoning\nprocess via iteratively reflecting on and self-correcting previous reasoning\nsteps. Experimental results show that ScaleRTL achieves state-of-the-art\nperformance on VerilogEval and RTLLM, outperforming 18 competitive baselines by\nup to 18.4% on VerilogEval and 12.7% on RTLLM.", "AI": {"title_translation": "ScaleRTL：通过推理数据和测试时计算扩展LLM以实现精确的RTL代码生成", "tldr": "ScaleRTL是一个推理LLM，通过大规模高质量推理数据和测试时计算，显著提升了RTL代码生成性能，在VerilogEval和RTLLM上实现了最先进的成果。", "motivation": "现有大型语言模型（LLMs）在RTL代码生成方面的效果有限，主要原因是高质量训练数据稀缺，且缺乏对测试时扩展的支持，因为它们是非推理性质的。", "method": "本文引入了ScaleRTL，这是第一个用于RTL编码的推理LLM，它同时扩展了高质量推理数据和测试时计算。具体来说，我们整理了一组多样化的长链式思考推理轨迹，平均每个56K token，形成了一个3.5B token的数据集，捕获了丰富的RTL知识。通过对通用推理模型进行微调，得到了具备深度RTL推理能力的ScaleRTL。随后，通过一种新颖的测试时扩展策略进一步提升了ScaleRTL的性能，该策略通过迭代反思和自我纠正先前的推理步骤来扩展推理过程。", "result": "实验结果表明，ScaleRTL在VerilogEval和RTLLM上取得了最先进的性能，在VerilogEval上比18个竞争基线模型高出18.4%，在RTLLM上高出12.7%。", "conclusion": "ScaleRTL通过结合大规模高质量推理数据和创新的测试时计算策略，显著提高了大型语言模型在RTL代码生成任务上的准确性和性能。", "translation": "大型语言模型（LLMs）的最新进展使得它们在软件编码基准测试上达到了接近人类的性能，但由于高质量训练数据的稀缺性，它们在RTL代码生成方面的有效性仍然有限。虽然之前的努力已经针对RTL任务对LLMs进行了微调，但它们并未从根本上克服数据瓶颈，并且由于其非推理性质而缺乏对测试时扩展的支持。在这项工作中，我们引入了ScaleRTL，这是第一个用于RTL编码的推理LLM，它同时扩展了高质量推理数据和测试时计算。具体来说，我们整理了一组多样化的长链式思考推理轨迹，平均每个56K token，形成了一个3.5B token的数据集，捕获了丰富的RTL知识。通过对通用推理模型进行微调，得到了具备深度RTL推理能力的ScaleRTL。随后，我们通过一种新颖的测试时扩展策略进一步提升了ScaleRTL的性能，该策略通过迭代反思和自我纠正先前的推理步骤来扩展推理过程。实验结果表明，ScaleRTL在VerilogEval和RTLLM上取得了最先进的性能，在VerilogEval上比18个竞争基线模型高出18.4%，在RTLLM上高出12.7%。", "summary": "ScaleRTL是一个用于RTL代码生成的推理大型语言模型。针对当前LLM在RTL代码生成中因数据稀缺和缺乏测试时扩展支持而存在的局限性，ScaleRTL通过构建大规模高质量链式思考推理数据集（3.5B tokens）来训练模型，并引入新颖的测试时扩展策略，通过迭代反思和自我纠正来增强推理过程。实验结果表明，ScaleRTL在VerilogEval和RTLLM基准测试上均达到了最先进的性能，显著优于现有基线模型。", "keywords": "RTL代码生成, 大型语言模型, 推理数据, 测试时计算, 链式思考", "comments": "ScaleRTL的创新之处在于其双重扩展策略：一是通过大规模高质量的链式思考推理数据克服了RTL领域数据稀缺的瓶颈；二是通过独特的测试时自我纠正机制，进一步提升了模型的推理能力和准确性。这为LLM在专业领域，特别是代码生成领域的应用提供了新的范式，展现了推理能力和数据质量在提升模型性能上的巨大潜力。"}}
{"id": "2506.05682", "pdf": "https://arxiv.org/pdf/2506.05682", "abs": "https://arxiv.org/abs/2506.05682", "authors": ["Yu Feng", "Weikai Lin", "Yuge Cheng", "Zihan Liu", "Jingwen Leng", "Minyi Guo", "Chen Chen", "Shixuan Sun", "Yuhao Zhu"], "title": "Lumina: Real-Time Mobile Neural Rendering by Exploiting Computational Redundancy", "categories": ["cs.AR"], "comment": null, "summary": "3D Gaussian Splatting (3DGS) has vastly advanced the pace of neural\nrendering, but it remains computationally demanding on today's mobile SoCs. To\naddress this challenge, we propose Lumina, a hardware-algorithm co-designed\nsystem, which integrates two principal optimizations: a novel algorithm, S^2,\nand a radiance caching mechanism, RC, to improve the efficiency of neural\nrendering. S2 algorithm exploits temporal coherence in rendering to reduce the\ncomputational overhead, while RC leverages the color integration process of\n3DGS to decrease the frequency of intensive rasterization computations. Coupled\nwith these techniques, we propose an accelerator architecture, LuminCore, to\nfurther accelerate cache lookup and address the fundamental inefficiencies in\nRasterization. We show that Lumina achieves 4.5x speedup and 5.3x energy\nreduction against a mobile Volta GPU, with a marginal quality loss (< 0.2 dB\npeak signal-to-noise ratio reduction) across synthetic and real-world datasets.", "AI": {"title_translation": "Lumina：通过利用计算冗余实现实时移动神经渲染", "tldr": "Lumina是一个软硬件协同设计的系统，通过新算法S^2和辐射缓存RC，以及加速器LuminCore，显著提升了移动设备上3D高斯泼溅神经渲染的效率和能效，同时保持了高质量。", "motivation": "3D高斯泼溅（3DGS）在神经渲染方面取得了巨大进展，但在目前的移动SoC上计算需求仍然很高。", "method": "Lumina是一个软硬件协同设计的系统，它整合了两种主要优化：一种新颖的算法S^2和一种辐射缓存（RC）机制。S^2算法利用渲染中的时间相干性来减少计算开销，而RC则利用3DGS的颜色积分过程来降低密集光栅化计算的频率。此外，该系统提出了一个加速器架构LuminCore，以进一步加速缓存查找并解决光栅化中的根本性低效问题。", "result": "Lumina相对于移动Volta GPU实现了4.5倍的加速和5.3倍的能耗降低，在合成和真实世界数据集上质量损失微乎其微（峰值信噪比降低<0.2 dB）。", "conclusion": "Lumina通过软硬件协同设计，成功解决了移动设备上3D高斯泼溅神经渲染计算量大的挑战，显著提高了效率和能效，同时保持了高质量。", "translation": "3D高斯泼溅（3DGS）极大地推动了神经渲染的进步，但它在当前的移动SoC上仍然计算量巨大。为了解决这一挑战，我们提出了Lumina，一个软硬件协同设计的系统，它整合了两个主要优化：一种新颖的算法S^2和一种辐射缓存（RC）机制，以提高神经渲染的效率。S^2算法利用渲染中的时间相干性来减少计算开销，而RC则利用3DGS的颜色积分过程来降低密集光栅化计算的频率。结合这些技术，我们提出了一个加速器架构LuminCore，以进一步加速缓存查找并解决光栅化中的根本性低效问题。我们表明，Lumina相对于移动Volta GPU实现了4.5倍的加速和5.3倍的能耗降低，在合成和真实世界数据集上质量损失微乎其微（峰值信噪比降低<0.2 dB）。", "summary": "Lumina是一个为解决移动设备上3D高斯泼溅（3DGS）神经渲染计算量大问题而提出的软硬件协同系统。它包含S^2算法（利用时间相干性减少计算）和辐射缓存（RC）机制（减少光栅化频率），并结合了专门的加速器架构LuminCore。实验结果显示，Lumina比移动Volta GPU快4.5倍，能耗降低5.3倍，且图像质量损失极小。", "keywords": "神经渲染, 3D高斯泼溅, 移动计算, 软硬件协同设计, 计算冗余", "comments": "该论文通过软硬件协同设计，针对移动设备上的神经渲染（特别是3DGS）的计算密集性问题提出了创新解决方案。S^2算法和辐射缓存机制在算法层面优化了效率，而LuminCore加速器则在硬件层面提供了支持，展现了软硬件协同在提升性能和能效方面的巨大潜力。其在保持高质量的同时实现显著加速和能耗降低，对于推动神经渲染在移动设备上的实际应用具有重要意义。"}}
{"id": "2506.05588", "pdf": "https://arxiv.org/pdf/2506.05588", "abs": "https://arxiv.org/abs/2506.05588", "authors": ["Rishona Daniels", "Duna Wattad", "Ronny Ronen", "David Saad", "Shahar Kvatinsky"], "title": "Preprocessing Methods for Memristive Reservoir Computing for Image Recognition", "categories": ["cs.NE", "cs.AR", "cs.ET"], "comment": "6 pages, 8 figures, submitted for review in IEEE MetroXRAINE 2025\n  conference", "summary": "Reservoir computing (RC) has attracted attention as an efficient recurrent\nneural network architecture due to its simplified training, requiring only its\nlast perceptron readout layer to be trained. When implemented with memristors,\nRC systems benefit from their dynamic properties, which make them ideal for\nreservoir construction. However, achieving high performance in memristor-based\nRC remains challenging, as it critically depends on the input preprocessing\nmethod and reservoir size. Despite growing interest, a comprehensive evaluation\nthat quantifies the impact of these factors is still lacking. This paper\nsystematically compares various preprocessing methods for memristive RC\nsystems, assessing their effects on accuracy and energy consumption. We also\npropose a parity-based preprocessing method that improves accuracy by 2-6%\nwhile requiring only a modest increase in device count compared to other\nmethods. Our findings highlight the importance of informed preprocessing\nstrategies to improve the efficiency and scalability of memristive RC systems.", "AI": {"title_translation": "忆阻器储层计算用于图像识别的预处理方法", "tldr": "本文系统比较了忆阻器储层计算的不同预处理方法，并提出了一种基于奇偶校验的预处理方法，提高了图像识别的准确性。", "motivation": "忆阻器储层计算在图像识别中实现高性能仍然具有挑战性，因为它严重依赖于输入预处理方法和储层大小。目前缺乏对这些因素影响的全面评估。", "method": "本文系统地比较了忆阻器储层计算系统的各种预处理方法，评估了它们对准确性和能耗的影响。同时，提出了一种基于奇偶校验的预处理方法。", "result": "研究发现，所提出的基于奇偶校验的预处理方法将准确性提高了2-6%，同时与其他方法相比，所需的器件数量仅适度增加。研究结果强调了明智的预处理策略对于提高忆阻器储层计算系统效率和可扩展性的重要性。", "conclusion": "明智的预处理策略对于提高忆阻器储层计算系统的效率和可扩展性至关重要。", "translation": "储层计算（RC）作为一种高效的循环神经网络架构，因其训练简化，仅需训练最后一个感知器读出层而备受关注。当与忆阻器结合时，RC系统受益于其动态特性，这使得它们非常适合储层构建。然而，在基于忆阻器的RC中实现高性能仍然具有挑战性，因为它严重依赖于输入预处理方法和储层大小。尽管兴趣日益增长，但目前仍缺乏量化这些因素影响的全面评估。本文系统地比较了忆阻器RC系统的各种预处理方法，评估了它们对准确性和能耗的影响。我们还提出了一种基于奇偶校验的预处理方法，该方法将准确性提高了2-6%，同时与其他方法相比，所需的器件数量仅适度增加。我们的研究结果强调了明智的预处理策略对于提高忆阻器RC系统效率和可扩展性的重要性。", "summary": "本文研究了忆阻器储层计算（RC）在图像识别中的预处理方法。鉴于忆阻器RC的性能受输入预处理和储层大小的关键影响，且缺乏全面评估，作者系统比较了多种预处理方法对准确性和能耗的影响。研究提出了一种基于奇偶校验的预处理方法，结果显示其能将准确性提高2-6%，且仅需适度增加器件数量。研究强调了有效预处理策略对提升忆阻器RC系统效率和可扩展性的重要性。", "keywords": "忆阻器储层计算, 预处理方法, 图像识别, 准确性, 能耗", "comments": "这篇论文的创新点在于提出了基于奇偶校验的预处理方法，并在忆阻器储层计算中进行了系统评估，填补了该领域缺乏全面量化分析的空白。其重要性在于为提高忆阻器RC系统的性能和能效提供了实用的指导。"}}
{"id": "2506.05994", "pdf": "https://arxiv.org/pdf/2506.05994", "abs": "https://arxiv.org/abs/2506.05994", "authors": ["Yi-Chun Liao", "Chieh-Lin Tsai", "Yuan-Hao Chang", "Camélia Slimani", "Jalil Boukhobza", "Tei-Wei Kuo"], "title": "RETENTION: Resource-Efficient Tree-Based Ensemble Model Acceleration with Content-Addressable Memory", "categories": ["cs.LG", "cs.AR", "cs.ET"], "comment": null, "summary": "Although deep learning has demonstrated remarkable capabilities in learning\nfrom unstructured data, modern tree-based ensemble models remain superior in\nextracting relevant information and learning from structured datasets. While\nseveral efforts have been made to accelerate tree-based models, the inherent\ncharacteristics of the models pose significant challenges for conventional\naccelerators. Recent research leveraging content-addressable memory (CAM)\noffers a promising solution for accelerating tree-based models, yet existing\ndesigns suffer from excessive memory consumption and low utilization. This work\naddresses these challenges by introducing RETENTION, an end-to-end framework\nthat significantly reduces CAM capacity requirement for tree-based model\ninference. We propose an iterative pruning algorithm with a novel pruning\ncriterion tailored for bagging-based models (e.g., Random Forest), which\nminimizes model complexity while ensuring controlled accuracy degradation.\nAdditionally, we present a tree mapping scheme that incorporates two innovative\ndata placement strategies to alleviate the memory redundancy caused by the\nwidespread use of don't care states in CAM. Experimental results show that\nimplementing the tree mapping scheme alone achieves $1.46\\times$ to $21.30\n\\times$ better space efficiency, while the full RETENTION framework yields\n$4.35\\times$ to $207.12\\times$ improvement with less than 3% accuracy loss.\nThese results demonstrate that RETENTION is highly effective in reducing CAM\ncapacity requirement, providing a resource-efficient direction for tree-based\nmodel acceleration.", "AI": {"title_translation": "RETENTION: 基于内容可寻址存储器的资源高效树形集成模型加速", "tldr": "RETENTION通过迭代剪枝算法和创新的树映射方案，显著减少了树形模型推理所需的CAM容量，实现了资源高效的加速，同时保持了高精度。", "motivation": "尽管深度学习在非结构化数据方面表现出色，但树形集成模型在结构化数据集上仍具有优势。然而，现有树形模型加速器面临挑战，特别是利用内容可寻址存储器（CAM）的方案存在内存消耗过大和利用率低的问题。", "method": "本文提出了RETENTION端到端框架，旨在显著降低树形模型推理所需的CAM容量。该框架包括：1) 一种针对基于bagging模型（如随机森林）的迭代剪枝算法，该算法具有新颖的剪枝准则，可在确保受控精度下降的同时最小化模型复杂度。2) 一种树映射方案，该方案结合了两种创新的数据放置策略，以减轻CAM中广泛使用“无关”状态导致的内存冗余。", "result": "实验结果表明，仅实施树映射方案即可实现1.46倍至21.30倍的空间效率提升；而完整的RETENTION框架可实现4.35倍至207.12倍的改进，且精度损失小于3%。", "conclusion": "这些结果表明，RETENTION在降低CAM容量需求方面非常有效，为树形模型加速提供了一个资源高效的方向。", "translation": "尽管深度学习在从非结构化数据中学习方面表现出卓越的能力，但现代树形集成模型在从结构化数据集中提取相关信息和学习方面仍然更胜一筹。虽然已经做出了多项努力来加速树形模型，但模型固有的特性给传统加速器带来了重大挑战。最近利用内容可寻址存储器（CAM）的研究为加速树形模型提供了一个有前景的解决方案，但现有设计存在内存消耗过大和利用率低的问题。这项工作通过引入RETENTION来应对这些挑战，RETENTION是一个端到端框架，可显著降低树形模型推理所需的CAM容量。我们提出了一种迭代剪枝算法，该算法具有新颖的剪枝准则，专为基于bagging的模型（例如随机森林）量身定制，可在确保受控精度下降的同时最小化模型复杂度。此外，我们提出了一种树映射方案，该方案结合了两种创新的数据放置策略，以减轻CAM中广泛使用“无关”状态导致的内存冗余。实验结果表明，仅实施树映射方案即可实现1.46倍至21.30倍的空间效率提升，而完整的RETENTION框架可实现4.35倍至207.12倍的改进，且精度损失小于3%。这些结果表明，RETENTION在降低CAM容量需求方面非常有效，为树形模型加速提供了一个资源高效的方向。", "summary": "RETENTION是一个端到端框架，旨在通过迭代剪枝算法和创新的树映射方案，显著降低树形集成模型推理对内容可寻址存储器（CAM）的容量需求。实验证明，该框架在空间效率上实现了显著提升（最高207.12倍），同时保持了较低的精度损失（小于3%），为树形模型加速提供了资源高效的解决方案。", "keywords": "树形集成模型, 内容可寻址存储器, 模型加速, 资源效率, 迭代剪枝", "comments": "这篇论文通过提出一个名为RETENTION的框架，有效解决了基于内容可寻址存储器（CAM）加速树形模型时面临的内存消耗过大和利用率低的问题。其创新点在于结合了专门为bagging模型设计的迭代剪枝算法和独特的树映射方案，这不仅显著提升了硬件资源效率，还保持了模型精度。这项工作为在资源受限环境下部署高性能树形模型提供了重要方向。"}}
