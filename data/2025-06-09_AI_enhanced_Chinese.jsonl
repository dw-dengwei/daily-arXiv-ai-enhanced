{"id": "2506.05566", "pdf": "https://arxiv.org/pdf/2506.05566", "abs": "https://arxiv.org/abs/2506.05566", "authors": ["Chenhui Deng", "Yun-Da Tsai", "Guan-Ting Liu", "Zhongzhi Yu", "Haoxing Ren"], "title": "ScaleRTL: Scaling LLMs with Reasoning Data and Test-Time Compute for Accurate RTL Code Generation", "categories": ["cs.AR", "cs.AI"], "comment": null, "summary": "Recent advances in large language models (LLMs) have enabled near-human\nperformance on software coding benchmarks, but their effectiveness in RTL code\ngeneration remains limited due to the scarcity of high-quality training data.\nWhile prior efforts have fine-tuned LLMs for RTL tasks, they do not\nfundamentally overcome the data bottleneck and lack support for test-time\nscaling due to their non-reasoning nature. In this work, we introduce ScaleRTL,\nthe first reasoning LLM for RTL coding that scales up both high-quality\nreasoning data and test-time compute. Specifically, we curate a diverse set of\nlong chain-of-thought reasoning traces averaging 56K tokens each, resulting in\na dataset of 3.5B tokens that captures rich RTL knowledge. Fine-tuning a\ngeneral-purpose reasoning model on this corpus yields ScaleRTL that is capable\nof deep RTL reasoning. Subsequently, we further enhance the performance of\nScaleRTL through a novel test-time scaling strategy that extends the reasoning\nprocess via iteratively reflecting on and self-correcting previous reasoning\nsteps. Experimental results show that ScaleRTL achieves state-of-the-art\nperformance on VerilogEval and RTLLM, outperforming 18 competitive baselines by\nup to 18.4% on VerilogEval and 12.7% on RTLLM.", "AI": {"title_translation": "ScaleRTL：通过推理数据和测试时计算扩展大型语言模型以实现精确RTL代码生成", "tldr": "ScaleRTL是一个推理型LLM，通过高质量推理数据和测试时计算，显著提升了RTL代码生成性能，并在VerilogEval和RTLLM基准上取得了最先进的结果。", "motivation": "当前LLM在RTL代码生成方面的效果有限，主要原因是高质量训练数据稀缺，且现有方法无法根本克服数据瓶颈，也缺乏对测试时扩展的支持。", "method": "本文引入了ScaleRTL，第一个用于RTL编码的推理型LLM。它通过以下方式扩展：1. 策划了一个包含平均56K tokens的多元化长链式思维推理轨迹数据集，共3.5B tokens，捕捉了丰富的RTL知识。2. 在此语料库上对通用推理模型进行微调，以实现深度RTL推理。3. 通过一种新颖的测试时扩展策略进一步增强性能，该策略通过迭代反思和自我纠正先前的推理步骤来扩展推理过程。", "result": "ScaleRTL在VerilogEval和RTLLM上取得了最先进的性能，在VerilogEval上超越了18个竞争基线高达18.4%，在RTLLM上超越了12.7%。", "conclusion": "ScaleRTL通过结合高质量的推理数据和创新的测试时计算扩展策略，显著提升了大型语言模型在RTL代码生成任务上的性能，并达到了最先进的水平。", "translation": "大型语言模型（LLM）的最新进展使得在软件编码基准上实现了接近人类的性能，但由于高质量训练数据的稀缺，它们在RTL代码生成方面的有效性仍然有限。虽然之前的努力已经针对RTL任务对LLM进行了微调，但它们未能从根本上克服数据瓶颈，并且由于其非推理性质，缺乏对测试时扩展的支持。在这项工作中，我们引入了ScaleRTL，这是第一个用于RTL编码的推理型LLM，它同时扩展了高质量推理数据和测试时计算。具体来说，我们策划了一组多样化的长链式思维推理轨迹，平均每个56K tokens，从而形成了一个3.5B tokens的数据集，捕捉了丰富的RTL知识。在此语料库上对通用推理模型进行微调，产生了能够进行深度RTL推理的ScaleRTL。随后，我们通过一种新颖的测试时扩展策略进一步增强了ScaleRTL的性能，该策略通过迭代反思和自我纠正之前的推理步骤来扩展推理过程。实验结果表明，ScaleRTL在VerilogEval和RTLLM上取得了最先进的性能，在VerilogEval上比18个竞争基线高出18.4%，在RTLLM上高出12.7%。", "summary": "ScaleRTL是一个专门为RTL代码生成设计的推理型大型语言模型。它通过构建一个包含3.5B tokens的丰富链式思维推理数据集来克服数据稀缺问题，并在此基础上对通用推理模型进行微调。此外，ScaleRTL还引入了一种新颖的测试时扩展策略，通过迭代反思和自我纠正来优化推理过程。实验结果表明，ScaleRTL在VerilogEval和RTLLM基准测试中均取得了最先进的性能，显著优于现有模型。", "keywords": "RTL代码生成, 大型语言模型, 推理数据, 测试时计算, 链式思维", "comments": "ScaleRTL的创新之处在于其双重扩展策略：一方面通过大规模高质量推理数据的构建，解决了RTL领域数据稀缺的痛点；另一方面，引入的测试时自我纠正推理机制，有效提升了模型的鲁棒性和准确性。这对于推动LLM在专业领域，尤其是硬件描述语言生成方面的应用具有重要意义。"}}
{"id": "2506.05682", "pdf": "https://arxiv.org/pdf/2506.05682", "abs": "https://arxiv.org/abs/2506.05682", "authors": ["Yu Feng", "Weikai Lin", "Yuge Cheng", "Zihan Liu", "Jingwen Leng", "Minyi Guo", "Chen Chen", "Shixuan Sun", "Yuhao Zhu"], "title": "Lumina: Real-Time Mobile Neural Rendering by Exploiting Computational Redundancy", "categories": ["cs.AR"], "comment": null, "summary": "3D Gaussian Splatting (3DGS) has vastly advanced the pace of neural\nrendering, but it remains computationally demanding on today's mobile SoCs. To\naddress this challenge, we propose Lumina, a hardware-algorithm co-designed\nsystem, which integrates two principal optimizations: a novel algorithm, S^2,\nand a radiance caching mechanism, RC, to improve the efficiency of neural\nrendering. S2 algorithm exploits temporal coherence in rendering to reduce the\ncomputational overhead, while RC leverages the color integration process of\n3DGS to decrease the frequency of intensive rasterization computations. Coupled\nwith these techniques, we propose an accelerator architecture, LuminCore, to\nfurther accelerate cache lookup and address the fundamental inefficiencies in\nRasterization. We show that Lumina achieves 4.5x speedup and 5.3x energy\nreduction against a mobile Volta GPU, with a marginal quality loss (< 0.2 dB\npeak signal-to-noise ratio reduction) across synthetic and real-world datasets.", "AI": {"title_translation": "Lumina：通过利用计算冗余实现实时移动神经渲染", "tldr": "Lumina是一个软硬件协同设计的系统，通过S^2算法、辐射缓存机制和LuminCore加速器，显著提高了移动设备上神经渲染的效率和能效，同时保持了图像质量。", "motivation": "3D高斯泼溅（3DGS）虽然极大地推动了神经渲染的进步，但在当前的移动SoC上仍然计算量巨大。", "method": "Lumina是一个软硬件协同设计的系统，它集成了两项主要优化：一种新颖的S^2算法和一种辐射缓存（RC）机制，以提高神经渲染的效率。S^2算法利用渲染中的时间相干性来减少计算开销，而RC则利用3DGS的颜色积分过程来降低密集光栅化计算的频率。此外，该论文还提出了一种加速器架构LuminCore，以进一步加速缓存查找并解决光栅化中的基本低效率问题。", "result": "Lumina在合成和真实世界数据集上，相比移动Volta GPU实现了4.5倍的速度提升和5.3倍的能耗降低，而图像质量损失可忽略不计（峰值信噪比降低小于0.2 dB）。", "conclusion": "Lumina通过软硬件协同设计，成功解决了移动设备上神经渲染的计算挑战，实现了显著的性能和能效提升，同时保持了高质量的渲染效果。", "translation": "3D高斯泼溅（3DGS）极大地推动了神经渲染的进步，但它在当今的移动SoC上仍然计算量巨大。为了解决这一挑战，我们提出了Lumina，一个软硬件协同设计的系统，它集成了两项主要优化：一种新颖的S^2算法和一种辐射缓存（RC）机制，以提高神经渲染的效率。S^2算法利用渲染中的时间相干性来减少计算开销，而RC则利用3DGS的颜色积分过程来降低密集光栅化计算的频率。结合这些技术，我们提出了一种加速器架构LuminCore，以进一步加速缓存查找并解决光栅化中的基本低效率问题。我们表明，Lumina在合成和真实世界数据集上，相比移动Volta GPU实现了4.5倍的速度提升和5.3倍的能耗降低，而图像质量损失可忽略不计（峰值信噪比降低小于0.2 dB）。", "summary": "本论文提出了Lumina，一个针对移动设备神经渲染的软硬件协同设计系统，旨在解决3D高斯泼溅（3DGS）在移动SoC上计算量大的问题。Lumina包含S^2算法（利用时间相干性）和辐射缓存（RC）机制（减少光栅化频率）以提高效率。此外，还引入了LuminCore加速器以优化缓存查找和光栅化效率。实验结果显示，Lumina相比移动Volta GPU实现了4.5倍的速度提升和5.3倍的能耗降低，同时保持了高质量的渲染效果。", "keywords": "神经渲染, 3D高斯泼溅, 移动计算, 硬件加速, 计算冗余", "comments": "该论文的创新点在于其软硬件协同设计方法，特别是结合了S^2算法、辐射缓存机制和专门的LuminCore加速器，有效解决了移动设备上神经渲染的性能瓶颈。通过利用计算冗余和优化光栅化过程，实现了显著的速度和能效提升，同时将图像质量损失控制在可接受范围内，这对于推动神经渲染在移动端的实际应用具有重要意义。"}}
{"id": "2506.05588", "pdf": "https://arxiv.org/pdf/2506.05588", "abs": "https://arxiv.org/abs/2506.05588", "authors": ["Rishona Daniels", "Duna Wattad", "Ronny Ronen", "David Saad", "Shahar Kvatinsky"], "title": "Preprocessing Methods for Memristive Reservoir Computing for Image Recognition", "categories": ["cs.NE", "cs.AR", "cs.ET"], "comment": "6 pages, 8 figures, submitted for review in IEEE MetroXRAINE 2025\n  conference", "summary": "Reservoir computing (RC) has attracted attention as an efficient recurrent\nneural network architecture due to its simplified training, requiring only its\nlast perceptron readout layer to be trained. When implemented with memristors,\nRC systems benefit from their dynamic properties, which make them ideal for\nreservoir construction. However, achieving high performance in memristor-based\nRC remains challenging, as it critically depends on the input preprocessing\nmethod and reservoir size. Despite growing interest, a comprehensive evaluation\nthat quantifies the impact of these factors is still lacking. This paper\nsystematically compares various preprocessing methods for memristive RC\nsystems, assessing their effects on accuracy and energy consumption. We also\npropose a parity-based preprocessing method that improves accuracy by 2-6%\nwhile requiring only a modest increase in device count compared to other\nmethods. Our findings highlight the importance of informed preprocessing\nstrategies to improve the efficiency and scalability of memristive RC systems.", "AI": {"title_translation": "忆阻器储层计算用于图像识别的预处理方法", "tldr": "本文系统比较了忆阻器储层计算的各种预处理方法，并提出了一种基于奇偶校验的预处理方法，该方法将准确性提高了2-6%，同时仅需适度增加器件数量。", "motivation": "忆阻器储层计算（RC）在实现高性能方面仍面临挑战，其性能关键取决于输入预处理方法和储层大小。尽管人们对此兴趣日益增长，但仍缺乏量化这些因素影响的全面评估。", "method": "本文系统比较了各种用于忆阻器RC系统的预处理方法，评估它们对准确性和能耗的影响。此外，还提出了一种基于奇偶校验的预处理方法。", "result": "研究发现，所提出的基于奇偶校验的预处理方法能够将准确性提高2-6%，同时与其它方法相比，仅需适度增加器件数量。研究结果强调了知情预处理策略对于提高忆阻器RC系统效率和可扩展性的重要性。", "conclusion": "知情的预处理策略对于提高忆阻器RC系统的效率和可扩展性至关重要。", "translation": "储层计算（RC）作为一种高效的循环神经网络架构，因其简化的训练（仅需训练其最后一个感知器读出层）而备受关注。当使用忆阻器实现时，RC系统受益于其动态特性，这使其非常适合储层构建。然而，在基于忆忆阻器的RC中实现高性能仍然具有挑战性，因为它关键取决于输入预处理方法和储层大小。尽管兴趣日益增长，但仍缺乏量化这些因素影响的全面评估。本文系统比较了忆阻器RC系统的各种预处理方法，评估它们对准确性和能耗的影响。我们还提出了一种基于奇偶校验的预处理方法，该方法将准确性提高了2-6%，同时与其它方法相比，仅需适度增加器件数量。我们的研究结果强调了知情预处理策略对于提高忆阻器RC系统效率和可扩展性的重要性。", "summary": "本文旨在解决忆阻器储层计算（RC）在图像识别中实现高性能的挑战，特别关注输入预处理方法。研究系统比较了多种预处理方法对忆阻器RC系统准确性和能耗的影响，并提出了一种新的基于奇偶校验的预处理方法。该方法被证明能有效提高准确性2-6%，且仅需少量额外硬件开销。研究结果强调了选择合适的预处理策略对于提升忆阻器RC系统效率和可扩展性的关键作用。", "keywords": "忆阻器储层计算, 图像识别, 预处理方法, 准确性, 能耗", "comments": "本文的创新点在于系统地评估了忆阻器储层计算的各种预处理方法，并提出了一种有效提高准确性的新型奇偶校验预处理方法。这对于推动忆阻器RC系统在图像识别领域的实际应用具有重要意义，因为它直接解决了性能瓶颈，并为未来的硬件实现提供了指导。"}}
{"id": "2506.05994", "pdf": "https://arxiv.org/pdf/2506.05994", "abs": "https://arxiv.org/abs/2506.05994", "authors": ["Yi-Chun Liao", "Chieh-Lin Tsai", "Yuan-Hao Chang", "Camélia Slimani", "Jalil Boukhobza", "Tei-Wei Kuo"], "title": "RETENTION: Resource-Efficient Tree-Based Ensemble Model Acceleration with Content-Addressable Memory", "categories": ["cs.LG", "cs.AR", "cs.ET"], "comment": null, "summary": "Although deep learning has demonstrated remarkable capabilities in learning\nfrom unstructured data, modern tree-based ensemble models remain superior in\nextracting relevant information and learning from structured datasets. While\nseveral efforts have been made to accelerate tree-based models, the inherent\ncharacteristics of the models pose significant challenges for conventional\naccelerators. Recent research leveraging content-addressable memory (CAM)\noffers a promising solution for accelerating tree-based models, yet existing\ndesigns suffer from excessive memory consumption and low utilization. This work\naddresses these challenges by introducing RETENTION, an end-to-end framework\nthat significantly reduces CAM capacity requirement for tree-based model\ninference. We propose an iterative pruning algorithm with a novel pruning\ncriterion tailored for bagging-based models (e.g., Random Forest), which\nminimizes model complexity while ensuring controlled accuracy degradation.\nAdditionally, we present a tree mapping scheme that incorporates two innovative\ndata placement strategies to alleviate the memory redundancy caused by the\nwidespread use of don't care states in CAM. Experimental results show that\nimplementing the tree mapping scheme alone achieves $1.46\\times$ to $21.30\n\\times$ better space efficiency, while the full RETENTION framework yields\n$4.35\\times$ to $207.12\\times$ improvement with less than 3% accuracy loss.\nThese results demonstrate that RETENTION is highly effective in reducing CAM\ncapacity requirement, providing a resource-efficient direction for tree-based\nmodel acceleration.", "AI": {"title_translation": "RETENTION：资源高效的基于树的集成模型加速与内容寻址存储器", "tldr": "RETENTION是一个资源高效的框架，通过迭代剪枝和新颖的树映射方案，显著减少内容寻址存储器（CAM）对基于树的集成模型加速的容量需求，同时保持高精度。", "motivation": "尽管深度学习在非结构化数据方面表现出色，但基于树的集成模型在结构化数据处理上仍具优势。现有加速树模型的方法面临挑战，尤其是在内容寻址存储器（CAM）的应用中，存在内存消耗过大和利用率低的问题。", "method": "本文提出了RETENTION框架，旨在显著降低基于树模型推理的CAM容量需求。具体方法包括：1) 提出一种迭代剪枝算法，其剪枝准则专为基于Bagging的模型（如随机森林）设计，以最小化模型复杂度并控制精度下降。2) 提出一种树映射方案，包含两种创新数据放置策略，以缓解CAM中广泛使用“不关心”状态导致的内存冗余。", "result": "实验结果显示，仅实施树映射方案即可实现1.46倍至21.30倍的空间效率提升；而完整的RETENTION框架则能实现4.35倍至207.12倍的改进，且精度损失低于3%。", "conclusion": "这些结果表明，RETENTION在降低CAM容量需求方面非常有效，为基于树的模型加速提供了一个资源高效的方向。", "translation": "尽管深度学习在从非结构化数据中学习方面表现出卓越的能力，但现代基于树的集成模型在从结构化数据集中提取相关信息和学习方面仍然更胜一筹。虽然已经做出了多项努力来加速基于树的模型，但模型的固有特性对传统加速器构成了重大挑战。最近利用内容寻址存储器（CAM）的研究为加速基于树的模型提供了一个有前途的解决方案，但现有设计存在内存消耗过大和利用率低的问题。这项工作通过引入RETENTION来解决这些挑战，RETENTION是一个端到端框架，显著降低了基于树模型推理的CAM容量需求。我们提出了一种迭代剪枝算法，其剪枝准则专为基于Bagging的模型（例如随机森林）量身定制，该算法在确保可控精度下降的同时最小化模型复杂度。此外，我们提出了一种树映射方案，该方案结合了两种创新的数据放置策略，以缓解CAM中广泛使用“不关心”状态导致的内存冗余。实验结果表明，仅实施树映射方案即可实现1.46倍至21.30倍的空间效率提升，而完整的RETENTION框架则能实现4.35倍至207.12倍的改进，且精度损失低于3%。这些结果表明，RETENTION在降低CAM容量需求方面非常有效，为基于树的模型加速提供了一个资源高效的方向。", "summary": "本文介绍了一个名为RETENTION的端到端框架，旨在解决现有内容寻址存储器（CAM）在加速基于树的集成模型时面临的内存消耗过大和利用率低的问题。RETENTION通过引入迭代剪枝算法和创新的树映射方案，显著减少了CAM的容量需求。实验证明，RETENTION能够实现显著的空间效率提升（最高达207.12倍），同时保持极低的精度损失（低于3%），为基于树的模型加速提供了一种资源高效的解决方案。", "keywords": "树模型加速, 内容寻址存储器, 模型剪枝, 空间效率, 集成模型", "comments": "该论文的创新点在于结合了模型剪枝和优化的数据放置策略，以解决CAM在加速基于树的模型时面临的效率瓶颈。其提出的迭代剪枝算法和树映射方案具有很强的实用价值，能够有效降低硬件成本和功耗。这项工作为高性能计算和嵌入式系统中基于树的模型的部署提供了新的思路，对于推动AI硬件加速领域的发展具有重要意义。"}}
